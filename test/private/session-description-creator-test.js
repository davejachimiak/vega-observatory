// Generated by CoffeeScript 1.7.1
(function() {
  var SessionDescriptionCreator, chai, expect, sinon, sinonChai;

  chai = require('chai');

  sinon = require('sinon');

  sinonChai = require('sinon-chai');

  expect = chai.expect;

  chai.use(sinonChai);

  SessionDescriptionCreator = require('../../private/session-description-creator.js');

  describe('SessionDescriptionCreator', function() {
    beforeEach(function() {
      this.observatory = new Object;
      this.peerId = 'an peer id';
      this.peerConnection = {
        createOffer: function() {}
      };
      return this.creator = new SessionDescriptionCreator(this.observatory, this.peerId, this.peerConnection);
    });
    afterEach(function() {
      return sinon.collection.restore();
    });
    return describe('#forOffer', function() {
      return it('creates an offer on the peer connection', function() {
        var createOffer, failureCallback, successCallback;
        failureCallback = this.creator.failureCallback;
        sinon.collection.stub(this.creator, 'successCallback').withArgs(this.creator.sendOffer).returns(successCallback = new Object);
        createOffer = sinon.collection.stub(this.peerConnection, 'createOffer');
        this.creator.forOffer();
        return expect(createOffer).to.have.been.calledWith(successCallback, failureCallback);
      });
    });
  });

}).call(this);
